name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  MESON_ARGS: >-
    --auto-features=enabled
    --fatal-meson-warnings
    -Danticheat-server=true
    -Davcodec=disabled
    -Dclient-gtv=true
    -Dpacketdup-hack=true
    -Dtests=true
    -Dvariable-fps=true
    -Dwerror=true

  MESON_ARGS_WIN: >-
    -Dsdl2=disabled
    -Dwayland=disabled
    -Dwrap_mode=forcefallback
    -Dx11=disabled

  MESON_ARGS_LINUX: >-
    -Dwindows-crash-dumps=disabled
    -Dwrap_mode=nofallback

  MESON_ARGS_MACOS: >-
    -Dicmp-errors=disabled
    -Dpkg_config_path=/opt/homebrew/opt/openal-soft/lib/pkgconfig
    -Dwayland=disabled
    -Dwindows-crash-dumps=disabled
    -Dwrap_mode=nofallback
    -Dx11=disabled

  MESON_ARGS_FREEBSD: >-
    -Dicmp-errors=disabled
    -Dwindows-crash-dumps=disabled
    -Dwrap_mode=nofallback

jobs:
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: ["x86", "x64"]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/cache@v4
        with:
          path: subprojects/packagecache
          key: ${{ hashFiles('subprojects/*.wrap') }}

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}

      - uses: ilammy/setup-nasm@v1

      - name: Install dependencies
        run: pip3 install --no-input meson ninja

      - name: Build
        run: |
          meson setup ${{ env.MESON_ARGS }} ${{ env.MESON_ARGS_WIN }} builddir
          meson compile -C builddir
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          retention-days: 2
          name: q2jump-pro-windows-${{ matrix.arch }}
          path: |
            builddir/q2jump*
            builddir/q2pro*
            builddir/game*

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, arm64, armv7]
        include:
          - arch: x86_64
            toolchain: gcc
            cross_file: ""
          - arch: arm64
            toolchain: gcc-aarch64-linux-gnu
            cross_file: config/linux-arm64-cross-file
          - arch: armv7
            toolchain: gcc-arm-linux-gnueabihf
            cross_file: config/linux-armv7-cross-file
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y meson libsdl2-dev libopenal-dev \
          libpng-dev libjpeg-dev zlib1g-dev mesa-common-dev \
          libcurl4-gnutls-dev libx11-dev libxi-dev \
          libwayland-dev wayland-protocols libdecor-0-dev \
          ninja-build ${{ matrix.toolchain }}-g++ \
          ${{ matrix.toolchain }}-gcc 

      - name: Configure build
        env:
          CC: gcc
        run: |
          if [ -z "${{ matrix.cross_file }}" ]; then
            # Native build for x86_64
            meson setup ${{ env.MESON_ARGS }} ${{ env.MESON_ARGS_LINUX }} builddir --buildtype=release
          else
            # Cross-compile for arm64 or armv7
            meson setup ${{ env.MESON_ARGS }} ${{ env.MESON_ARGS_LINUX }} builddir --cross-file ${{ matrix.cross_file }}
          fi

      - name: Build
        run: |
          meson compile -C builddir
        env:
          CC: ${{ matrix.cc }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          retention-days: 2
          name: q2jump-pro-linux-${{ matrix.arch }}
          path: |
            builddir/q2jump*
            builddir/q2pro*
            builddir/game*

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x86_64, arm64, universal]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install dependencies
        run: |
          brew update
          brew install meson sdl2 openal-soft libpng jpeg-turbo

      - name: Configure build
        env:
          CC: clang
        run: |
          if [ "${{ matrix.arch }}" == "x86_64" ]; then
            export GH_ARCH_NAME=amd64
            meson setup ${{ env.MESON_ARGS }} ${{ env.MESON_ARGS_MACOS }} --native-file config/darwin-x86_64-native-file builddir
          elif [ "${{ matrix.arch }}" == "arm64" ]; then
            export GH_ARCH_NAME=arm64
            meson setup ${{ env.MESON_ARGS }} ${{ env.MESON_ARGS_MACOS }} --native-file config/darwin-arm64-native-file builddir
          elif [ "${{ matrix.arch }}" == "universal" ]; then
            export GH_ARCH_NAME=universal
            CFLAGS="-arch x86_64 -arch arm64" LDFLAGS="-arch x86_64 -arch arm64" \
            meson setup ${{ env.MESON_ARGS }} ${{ env.MESON_ARGS_MACOS }} builddir
          fi

      - name: Build
        run: |
          meson compile -C builddir
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          retention-days: 2
          name: q2jump-pro-darwin-${{ env.GH_ARCH_NAME }}
          path: |
            builddir/q2jump*
            builddir/q2pro*
            builddir/game*

  release:
    runs-on: ubuntu-latest
    needs: [windows, linux, macos, freebsd]
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create or update release
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create latest ./artifacts/* \
            --prerelease --latest \
            --title "Latest Release" \
            --notes "Automatically generated release"
